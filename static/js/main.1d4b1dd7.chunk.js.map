{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Chart.js","components/GetPrices.js","components/Home.js","components/FetchData.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","PriceChart","data","fetch","then","response","ok","json","Error","networkError","console","log","message","jsonResponse","dates","bpi","inData","entry","push","fetchData","chartType","loader","options","chart","title","subtitle","hAxis","vAxis","rootProps","CurrentPrice","rate","updateTime","fetchPresent","id","currency","toString","urlAPI","amount","Date","intervalID","setInterval","startInterval","prevProps","clearInterval","HistoricalPrice","date","toISOString","slice","type","min","max","defaultValue","onChange","e","target","value","fetchPast","prevState","Home","currencyList","changeCurrency","map","cur","key","Copyright","href","rel","getFullYear","ReactDOM","render","document","getElementById","PauseButton","animated","body","style","animationPlayState","handleClick","coloring","text","anima","running","About","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","baseUrl","getElementsByTagName","getAttribute","rootElement","basename","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1d4b1dd7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">Bitcoin Display Rho</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/chart\">Chart</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/about\">About</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nexport class PriceChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({ data: [] });\r\n    }\r\n\r\n    fetchData() {\r\n        fetch(`https://api.coindesk.com/v1/bpi/historical/close`).then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            throw new Error('Request Failed');\r\n        }, networkError => console.log(networkError.message)\r\n        ).then(jsonResponse => {\r\n            let dates = jsonResponse.bpi;\r\n            let inData = [['x', 'Price Rate']];\r\n            for (const entry in dates) {\r\n                inData.push([entry, dates[entry]]);\r\n            }\r\n            this.setState({ data: inData });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Chart\r\n                    chartType=\"LineChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={this.state.data}\r\n                    options={{\r\n                        chart: {\r\n                            title: 'Rates from Past 30 Days',\r\n                            subtitle: 'BTC - USD'\r\n                        },\r\n                        hAxis: {\r\n                            title: 'Date',\r\n                        },\r\n                        vAxis: {\r\n                            title: 'USD',\r\n                        },\r\n                    }}\r\n                    rootProps={{ 'data-testid': '1' }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { PriceChart } from './Chart';\r\n\r\nexport class CurrentPrice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rate: \"\",\r\n            updateTime: \"\",\r\n        };\r\n        this.fetchPresent = this.fetchPresent.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"current\">\r\n                <h2>Current Price ({this.props.currency}):</h2>\r\n                <h3>{this.state.rate}</h3>\r\n                <h6>Updated: {this.state.updateTime.toString()}</h6>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    fetchPresent() {\r\n        const urlAPI = 'https://api.coinbase.com/v2/prices/BTC-'+this.props.currency+'/spot';\r\n            fetch(urlAPI).then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('Request Failed');\r\n            }, networkError => console.log(networkError.message)\r\n            ).then(jsonResponse => {\r\n                this.setState({\r\n                    rate: jsonResponse.data.amount,\r\n                    updateTime: new Date()\r\n                });\r\n            })\r\n       \r\n    }\r\n\r\n    startInterval() {\r\n        this.intervalID = setInterval(this.fetchPresent, 60000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPresent();\r\n        this.startInterval();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.currency !== this.props.currency) {\r\n            clearInterval(this.intervalID);\r\n            this.fetchPresent();\r\n            this.startInterval();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n}\r\n\r\nexport class HistoricalPrice extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rate: \"\",\r\n            date: new Date().toISOString().slice(0, 10)\r\n        };\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div id=\"historical\">\r\n                <h3>Historical Rates</h3>\r\n                <label>View Rate by Date: \r\n                <input type=\"date\" min='2010-07-17' max={new Date().toISOString().slice(0, 10)} defaultValue={new Date().toISOString().slice(0, 10)} onChange={(e) => this.setState({date: e.target.value})}/>\r\n                    <h4>{this.state.rate}</h4>\r\n                </label>\r\n                <PriceChart />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    fetchPast() {\r\n        const urlAPI = 'https://api.coinbase.com/v2/prices/BTC-' + this.props.currency + '/spot?date=' + this.state.date;\r\n            fetch(urlAPI).then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('Request Failed');\r\n            }, networkError => console.log(networkError.message)\r\n            ).then(jsonResponse => {\r\n                this.setState({\r\n                    rate: jsonResponse.data.amount\r\n                });\r\n            })\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPast();\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.currency !== this.props.currency || prevState.date !== this.state.date) {\r\n            this.fetchPast();\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CurrentPrice, HistoricalPrice } from './GetPrices';\r\n\r\n\r\n\r\n\r\nexport class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            currencyList: [],\r\n            currency: \"USD\"\r\n        };\r\n        this.changeCurrency = this.changeCurrency.bind(this);\r\n    }\r\n\r\n    changeCurrency(e) {\r\n        this.setState({\r\n            currency: e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const urlAPI = 'https://api.coinbase.com/v2/currencies';\r\n\r\n        fetch(urlAPI).then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            throw new Error('Request Failed');\r\n        }, networkError => console.log(networkError.message)\r\n        ).then(jsonResponse => {\r\n            this.setState({\r\n                currencyList: jsonResponse.data\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.currencyList) {\r\n            return (\r\n                <div>\r\n                    <label>Select a currency:\r\n                        <select id=\"Currencies\" defaultValue=\"USD\" onChange={this.changeCurrency}>\r\n                            <option value=\"USD\">US Dollar</option>\r\n                            {this.state.currencyList.map((cur) => <option value={cur.id} key={cur.id}>{cur.name}</option>)}\r\n                        </select>\r\n                    </label>\r\n                    <CurrentPrice currency={this.state.currency} />\r\n                    <HistoricalPrice currency={this.state.currency} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n    }\r\n}\r\n\r\nexport class Copyright extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <footer id=\"disclaim\">\r\n                This data was produced from the <a href='https://developers.coinbase.com/api' target=\"_blank\" rel=\"noopener noreferrer\">Coinbase Digital Currency API</a>.\r\n                <br />Copyright A. Abi-Karam, {new Date().getFullYear()}\r\n            </footer>\r\n                );\r\n    }\r\n}\r\n\r\nReactDOM.render(<Copyright />, document.getElementById(\"copy\"));\r\n\r\nclass PauseButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            animated: document.body.style.animationPlayState\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.coloring = \"btn btn-light\"\r\n        this.text = \"Pause Background\"\r\n    }\r\n\r\n    handleClick() {\r\n        const anima = document.body;\r\n        const running = anima.style.animationPlayState || 'running';\r\n        anima.style.animationPlayState = running === 'running' ? 'paused' : 'running';\r\n        this.coloring = running === 'running' ? 'btn btn-dark' : 'btn btn-light';\r\n        this.text = running === 'running' ? 'Resume Background' : 'Pause Background';\r\n        this.setState({ animated: anima.style.animationPlayState });\r\n    }\r\n\r\n    render() {\r\n        return <button onClick={this.handleClick} className={this.coloring}>{this.text}</button>;\r\n    }\r\n}\r\n\r\nReactDOM.render(<PauseButton />, document.getElementById(\"bottomButton\"));","import React, { Component } from 'react';\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >About Bitcoin</h1>\r\n            <p>Bitcoin is a decentralized digital currency, without a central bank or single administrator, that can be sent from user to user on the peer-to-peer bitcoin network without the need for intermediaries.\r\n            Transactions are verified by network nodes through cryptography and recorded in a public distributed ledger called a blockchain.\r\n            The cryptocurrency was invented in 2008 by an unknown person or group of people using the name Satoshi Nakamoto. The currency began use in 2009 when its implementation was released as open-source software.</p>\r\n            BTC Links:\r\n            <ul>\r\n                <li><a href=\"https://bitcoin.org\" target=\"_blank\" rel=\"noopener noreferrer\">Bitcoin.org</a></li>\r\n                <li><a href=\"https://www.coinbase.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Coinbase</a></li>\r\n                <li><a href=\"https://www.coindesk.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Coindesk</a></li>\r\n            </ul>\r\n            <h2>About the Site</h2>\r\n                <p>\r\n                Hello and thanks for stopping by! As of summer 2021 I am a college student studying Computer Science. I built this site using React and ASP .NET to help familarize myself with web development. Let me know what you think!\r\n                    <br />Check it out on <a href=\"https://github.com/abikaram\" target=\"_blank\" rel=\"noopener noreferrer\">github</a> to learn more.\r\n                </p>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { About } from './components/FetchData';\r\nimport { PriceChart } from './components/Chart';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/chart' component={PriceChart} />\r\n        <Route path='/about' component={About} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}